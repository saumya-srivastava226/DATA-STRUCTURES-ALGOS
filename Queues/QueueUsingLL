public class Queue {
	
	//Define the data members
    	 private Node head,tail;
    	private int size;


	public Queue() {
		//Implement the Constructor
        head=null;
        tail=null;
        size=0;
	}
	


	/*----------------- Public Functions of Stack -----------------*/


	public int getSize() { 
		//Implement the getSize() function
        return size;
    }


    public boolean isEmpty() { 
    	//Implement the isEmpty() function
        return size==0;
    }


    public void enqueue(int data) {
    	//Implement the enqueue(element) function
        Node newNode=new Node(data);
        size++;
        if(head==null&&tail==null)
        {
            head=newNode;
            tail=newNode;
            head.next=null;
            tail.next=null;
        }
       	
        
        else
          {
                tail.next=newNode;
                tail=newNode;
          }
        	
        
    }


    public int dequeue() {
    	//Implement the dequeue() function
       
        if(head==null)
            return -1;
        
         int temp=head.data;
        head=head.next;
        if(head==null)
            tail=null;
        size--;
        return temp;
    }


    public int front() {
    	//Implement the front() function
        if(head==null)
            return -1;
        
          int temp=head.data;
        
        return temp;
        
    }
}
