public class Solution {
    
   // private ArrayList<Integer> heap=new ArrayList<>();
    
    public static void heapify(int [] arr, int n, int i)
    {
        int smallest=i;
        int leftIndex=2*i+1;
        int rightIndex=2*i+2;
        
        if(leftIndex<n&&arr[leftIndex]<arr[smallest])
        {
            smallest=leftIndex;
        }
         if(rightIndex<n&&arr[rightIndex]<arr[smallest])
        {
            smallest=rightIndex;
        }
        if(smallest!=i)
        {
            int temp=arr[i];
            arr[i]=arr[smallest];
            arr[smallest]=temp;
            heapify(arr, n, smallest);   
        }
    }
    
//     public static void heapify(int [] arr, int n, int i)
//     {
//         int smallest=i;
//         int leftIndex=2*i+1;
//         int rightIndex=2*i+2;
        
//         if(leftIndex<n&&arr[leftIndex]<arr[smallest])
//         {
//             smallest=i;
//         }
//          if(rightIndex<n&&arr[rightIndex]>arr[smallest])
//         {
//             smallest=i;
//         }
//         if(smallest!=i)
//         {
//             int temp=arr[i];
//             arr[i]=arr[smallest];
//             arr[smallest]=temp;
//             heapify(arr, n, smallest);
        
            
//         }
//       //  heapify(arr, n, largest);
        
        
//     }
    

	public static void inplaceHeapSort(int arr[]) {
		/* Your class should be named Solution
		* Don't write main().
		* Don't read input, it is passed as function argument.
		* Change in the given input itself.
		* Taking input and printing output is handled automatically.
		*/
        int n=arr.length;
        for(int i=(n/2)-1;i>=0;i--)
            heapify(arr,n,i);
        
        for(int i=n-1;i>0;--i)
        {
            int temp=arr[0];
            arr[0]=arr[i];
            arr[i]=temp;
            
            
            heapify(arr,i,0);
        }
        
        
        
		
	}
    
}
