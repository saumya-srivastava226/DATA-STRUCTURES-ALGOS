public class Solution {

   public static void printSubtreeNodes(BinaryTreeNode<Integer> root, int k)
    {
        if(root==null||k<0)
            return;
        if(k==0)
            System.out.println(root.data);
        printSubtreeNodes(root.left,k-1);
        printSubtreeNodes(root.right,k-1);
    }
	public static void nodesAtDistanceK(BinaryTreeNode<Integer> root, int node, int k) {
	    //Your code goes here
        
        
        int res=nodesAtDistance(root,node,k);
        
        
        
        
        
        
        
	}
    public static int nodesAtDistance(BinaryTreeNode<Integer> root, int node, int k)
    {
        if(root==null)
            return -1;
        if(root.data==node)
        {
            printSubtreeNodes(root,k);
            return 0;
        }
        int dl=nodesAtDistance(root.left,node,k);
        if(dl!=-1)
        {
            if(dl+1==k)
            {
                System.out.println(root.data);
            }
            else
            {
                printSubtreeNodes(root.right,k-dl-2);
            }
            return 1+dl;
        }
        int dr=nodesAtDistance(root.right,node,k);
        if(dr!=-1)
        {
            if(dr+1==k)
            {
                System.out.println(root.data);
            }
            else
            {
                printSubtreeNodes(root.left,k-dr-2);
            }
            return 1+dr;
        }
        return -1;
    }

}
      
